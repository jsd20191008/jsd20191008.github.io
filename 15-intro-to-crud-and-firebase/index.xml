<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Intro to CRUD and Firebase on JavaScript</title>
    <link>/15-intro-to-crud-and-firebase/</link>
    <description>Recent content in Intro to CRUD and Firebase on JavaScript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/15-intro-to-crud-and-firebase/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Objectives</title>
      <link>/15-intro-to-crud-and-firebase/objectives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/15-intro-to-crud-and-firebase/objectives/</guid>
      <description> Explain what CRUD means
 Learn about Firebase and its benefits
 Use Firebase&amp;rsquo;s Firestore database to provide data persistence to a front-end app
  </description>
    </item>
    
    <item>
      <title>CRUD</title>
      <link>/15-intro-to-crud-and-firebase/crud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/15-intro-to-crud-and-firebase/crud/</guid>
      <description> What is CRUD  Stands for Create, Read, Update and Delete
 CRUD paradigm is common in constructing data-backed software applications
 Helps developers plan how their application&amp;rsquo;s data should be structured
 In the context of working with APIs, CRUD maps nicely to HTTP Verbs GET (read), Post (create), PUT (update) and DELETE (delete)
     CRUD Operation HTTP VERB Description     CREATE POST Create new data or resource   READ GET Read / fetch data or resource   UPDATE PUT Update existing data or resource   DELETE DELETE Delete existing data or resource    </description>
    </item>
    
    <item>
      <title>Firestore Database</title>
      <link>/15-intro-to-crud-and-firebase/firestore-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/15-intro-to-crud-and-firebase/firestore-database/</guid>
      <description>Firebase Firestore database overview  Cloud-hosted database
 NoSQL database; data is stored as JSON
 Changes made to the database are automatically synchronized for any other computer/phone (i.e. client) that is viewing data from the database
 Firestore database documentation can be found here
  Benefits  Simple data is easy to store in documents, which are very similar to JSON
 Complex, hierarchical data is easier to organize at scale, using sub collections within documents</description>
    </item>
    
    <item>
      <title>Code Along: Firebase Playlist App</title>
      <link>/15-intro-to-crud-and-firebase/code-along-firebase-playlist-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/15-intro-to-crud-and-firebase/code-along-firebase-playlist-app/</guid>
      <description>Code Along: Firebase Playlist App  Together we&amp;rsquo;ll walk through creating a playlist application that has its data persisted in Firebase&amp;rsquo;s Realtime Database (see docs)  1. Get the starter code for this code along  The starter code for this code along is hosted on Github, see the url below:
 Code Along: Firebase Playlist App
 Use the Assignment Submission Git Workflow (detailed here) to access and submit the assignment</description>
    </item>
    
  </channel>
</rss>